bash -c '

mkdir -p /tmp/chef-server-setup
(
cat <<'EOP'
<%= IO.read(Chef::Config[:validation_key]) %>
EOP
) > /tmp/chef-server-setup/validation.pem
(
cat <<'EOP'
<%= %x{openssl rsa -in #{Chef::Config[:validation_key]} -pubout} %>
EOP
) > /tmp/chef-server-setup/validation_pub.pem
(
cat <<'EOP'
<%= %x{openssl rsa -in #{Chef::Config[:client_key]} -pubout} %>
EOP
) > /tmp/chef-server-setup/client_key_pub.pem

mkdir -p /etc/chef
cp /tmp/chef-server-setup/validation.pem /etc/chef/validation.pem
chmod 600 /etc/chef/validation.pem

chef-server-ctl stop
chef-server-ctl uninstall
CHEF_SERVER_VERSION=`grep version-manifest-json /opt/chef-server/version-manifest.txt | tr -d "[:alpha:] -"`
rm -rf ~/*
rm -rf /opt/chef-server
rm -rf /var/opt/chef-server
rm /tmp/.s.PGSQL*
dpkg -i /var/chef-host/chef-server*

IPADDR=`ip addr show eth0 | grep "inet " | awk -F" " '\''{print $2}'\'' | sed -e "s/\/24//"`
(
echo "
{
  \"chef-server\": {
    \"version\": \"${CHEF_SERVER_VERSION}\",
    \"configuration\": {
      \"chef_server_webui\": {
        \"enable\": false
      },
      \"erchef\": {
        \"s3_url_ttl\": 3600
      }
    }
  },
  \"chef_server_populator\": {
    \"clients\": {
      \"<%= Chef::Config[:node_name] %>\": \"client_key_pub.pem\",
      \"<%= Chef::Config[:validation_client_name] %>\": \"validation_pub.pem\"
    },
    \"endpoint\": \"${IPADDR}\",
    \"base_path\": \"/tmp/chef-server-setup\"
  },
  \"run_list\": [ \"recipe[chef-server-populator::solo]\", \"recipe[chef-server]\" ]
}
"
) > /tmp/chef-server.json

chef-solo -j /tmp/chef-server.json -c /etc/chef-solo-host.rb
RESULT=$?

rm -rf /tmp/chef-server-setup

echo "**********************************************"
echo "* NOTE: Update chef_server_url in knife.rb!  *"
echo "*   IP: ${IPADDR}                       *"
echo "**********************************************"

exit ${RESULT}
'
